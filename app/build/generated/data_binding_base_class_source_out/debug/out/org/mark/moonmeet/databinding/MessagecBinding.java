// Generated by view binder compiler. Do not edit!
package org.mark.moonmeet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.mark.axemojiview.view.AXEmojiTextView;
import org.mark.moonmeet.R;

public final class MessagecBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout background;

  @NonNull
  public final LinearLayout bg;

  @NonNull
  public final CardView cardview;

  @NonNull
  public final LinearLayout corner;

  @NonNull
  public final LinearLayout corner2;

  @NonNull
  public final ImageView image;

  @NonNull
  public final LinearLayout imageHolder;

  @NonNull
  public final LinearLayout inMessageHolder;

  @NonNull
  public final ImageView love;

  @NonNull
  public final AXEmojiTextView message;

  @NonNull
  public final LinearLayout messageDown;

  @NonNull
  public final LinearLayout messageHolderReply;

  @NonNull
  public final ImageView replyImg;

  @NonNull
  public final LinearLayout replyInTopDivider;

  @NonNull
  public final AXEmojiTextView replyMessage;

  @NonNull
  public final TextView replyName;

  @NonNull
  public final LinearLayout replyTop;

  @NonNull
  public final LinearLayout secondAllInMessageHolder;

  @NonNull
  public final LinearLayout smallInReply;

  @NonNull
  public final TextView time;

  @NonNull
  public final TextView time2;

  private MessagecBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout background,
      @NonNull LinearLayout bg, @NonNull CardView cardview, @NonNull LinearLayout corner,
      @NonNull LinearLayout corner2, @NonNull ImageView image, @NonNull LinearLayout imageHolder,
      @NonNull LinearLayout inMessageHolder, @NonNull ImageView love,
      @NonNull AXEmojiTextView message, @NonNull LinearLayout messageDown,
      @NonNull LinearLayout messageHolderReply, @NonNull ImageView replyImg,
      @NonNull LinearLayout replyInTopDivider, @NonNull AXEmojiTextView replyMessage,
      @NonNull TextView replyName, @NonNull LinearLayout replyTop,
      @NonNull LinearLayout secondAllInMessageHolder, @NonNull LinearLayout smallInReply,
      @NonNull TextView time, @NonNull TextView time2) {
    this.rootView = rootView;
    this.background = background;
    this.bg = bg;
    this.cardview = cardview;
    this.corner = corner;
    this.corner2 = corner2;
    this.image = image;
    this.imageHolder = imageHolder;
    this.inMessageHolder = inMessageHolder;
    this.love = love;
    this.message = message;
    this.messageDown = messageDown;
    this.messageHolderReply = messageHolderReply;
    this.replyImg = replyImg;
    this.replyInTopDivider = replyInTopDivider;
    this.replyMessage = replyMessage;
    this.replyName = replyName;
    this.replyTop = replyTop;
    this.secondAllInMessageHolder = secondAllInMessageHolder;
    this.smallInReply = smallInReply;
    this.time = time;
    this.time2 = time2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MessagecBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MessagecBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.messagec, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MessagecBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.background;
      LinearLayout background = ViewBindings.findChildViewById(rootView, id);
      if (background == null) {
        break missingId;
      }

      id = R.id.bg;
      LinearLayout bg = ViewBindings.findChildViewById(rootView, id);
      if (bg == null) {
        break missingId;
      }

      id = R.id.cardview;
      CardView cardview = ViewBindings.findChildViewById(rootView, id);
      if (cardview == null) {
        break missingId;
      }

      id = R.id.corner;
      LinearLayout corner = ViewBindings.findChildViewById(rootView, id);
      if (corner == null) {
        break missingId;
      }

      id = R.id.corner2;
      LinearLayout corner2 = ViewBindings.findChildViewById(rootView, id);
      if (corner2 == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.image_holder;
      LinearLayout imageHolder = ViewBindings.findChildViewById(rootView, id);
      if (imageHolder == null) {
        break missingId;
      }

      id = R.id.in_message_holder;
      LinearLayout inMessageHolder = ViewBindings.findChildViewById(rootView, id);
      if (inMessageHolder == null) {
        break missingId;
      }

      id = R.id.love;
      ImageView love = ViewBindings.findChildViewById(rootView, id);
      if (love == null) {
        break missingId;
      }

      id = R.id.message;
      AXEmojiTextView message = ViewBindings.findChildViewById(rootView, id);
      if (message == null) {
        break missingId;
      }

      id = R.id.message_down;
      LinearLayout messageDown = ViewBindings.findChildViewById(rootView, id);
      if (messageDown == null) {
        break missingId;
      }

      id = R.id.message_holder_reply;
      LinearLayout messageHolderReply = ViewBindings.findChildViewById(rootView, id);
      if (messageHolderReply == null) {
        break missingId;
      }

      id = R.id.reply_img;
      ImageView replyImg = ViewBindings.findChildViewById(rootView, id);
      if (replyImg == null) {
        break missingId;
      }

      id = R.id.reply_in_top_divider;
      LinearLayout replyInTopDivider = ViewBindings.findChildViewById(rootView, id);
      if (replyInTopDivider == null) {
        break missingId;
      }

      id = R.id.reply_message;
      AXEmojiTextView replyMessage = ViewBindings.findChildViewById(rootView, id);
      if (replyMessage == null) {
        break missingId;
      }

      id = R.id.reply_name;
      TextView replyName = ViewBindings.findChildViewById(rootView, id);
      if (replyName == null) {
        break missingId;
      }

      id = R.id.reply_top;
      LinearLayout replyTop = ViewBindings.findChildViewById(rootView, id);
      if (replyTop == null) {
        break missingId;
      }

      id = R.id.second_all_in_message_holder;
      LinearLayout secondAllInMessageHolder = ViewBindings.findChildViewById(rootView, id);
      if (secondAllInMessageHolder == null) {
        break missingId;
      }

      id = R.id.small_in_reply;
      LinearLayout smallInReply = ViewBindings.findChildViewById(rootView, id);
      if (smallInReply == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      id = R.id.time2;
      TextView time2 = ViewBindings.findChildViewById(rootView, id);
      if (time2 == null) {
        break missingId;
      }

      return new MessagecBinding((LinearLayout) rootView, background, bg, cardview, corner, corner2,
          image, imageHolder, inMessageHolder, love, message, messageDown, messageHolderReply,
          replyImg, replyInTopDivider, replyMessage, replyName, replyTop, secondAllInMessageHolder,
          smallInReply, time, time2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
