// Generated by view binder compiler. Do not edit!
package org.mark.moonmeet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.mark.moonmeet.R;

public final class ShopBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final CoordinatorLayout Coordinator;

  @NonNull
  public final FloatingActionButton Fab;

  @NonNull
  public final RecyclerView RecyclerView;

  @NonNull
  public final ImageView back;

  @NonNull
  public final LinearLayout dividerTopbar;

  @NonNull
  public final LinearLayout holder;

  @NonNull
  public final LinearLayout noshopsyet;

  @NonNull
  public final MaterialTextView noshopsyetFullTxt;

  @NonNull
  public final MaterialTextView noshopsyetMiniTxt;

  @NonNull
  public final TextView shopText;

  @NonNull
  public final LinearLayout spaceTop;

  @NonNull
  public final LinearLayout topbar;

  private ShopBinding(@NonNull CoordinatorLayout rootView, @NonNull CoordinatorLayout Coordinator,
      @NonNull FloatingActionButton Fab, @NonNull RecyclerView RecyclerView,
      @NonNull ImageView back, @NonNull LinearLayout dividerTopbar, @NonNull LinearLayout holder,
      @NonNull LinearLayout noshopsyet, @NonNull MaterialTextView noshopsyetFullTxt,
      @NonNull MaterialTextView noshopsyetMiniTxt, @NonNull TextView shopText,
      @NonNull LinearLayout spaceTop, @NonNull LinearLayout topbar) {
    this.rootView = rootView;
    this.Coordinator = Coordinator;
    this.Fab = Fab;
    this.RecyclerView = RecyclerView;
    this.back = back;
    this.dividerTopbar = dividerTopbar;
    this.holder = holder;
    this.noshopsyet = noshopsyet;
    this.noshopsyetFullTxt = noshopsyetFullTxt;
    this.noshopsyetMiniTxt = noshopsyetMiniTxt;
    this.shopText = shopText;
    this.spaceTop = spaceTop;
    this.topbar = topbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ShopBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ShopBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.shop, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ShopBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CoordinatorLayout Coordinator = (CoordinatorLayout) rootView;

      id = R.id._fab;
      FloatingActionButton Fab = ViewBindings.findChildViewById(rootView, id);
      if (Fab == null) {
        break missingId;
      }

      id = R.id.RecyclerView;
      RecyclerView RecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (RecyclerView == null) {
        break missingId;
      }

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.divider_topbar;
      LinearLayout dividerTopbar = ViewBindings.findChildViewById(rootView, id);
      if (dividerTopbar == null) {
        break missingId;
      }

      id = R.id.holder;
      LinearLayout holder = ViewBindings.findChildViewById(rootView, id);
      if (holder == null) {
        break missingId;
      }

      id = R.id.noshopsyet;
      LinearLayout noshopsyet = ViewBindings.findChildViewById(rootView, id);
      if (noshopsyet == null) {
        break missingId;
      }

      id = R.id.noshopsyet_full_txt;
      MaterialTextView noshopsyetFullTxt = ViewBindings.findChildViewById(rootView, id);
      if (noshopsyetFullTxt == null) {
        break missingId;
      }

      id = R.id.noshopsyet_mini_txt;
      MaterialTextView noshopsyetMiniTxt = ViewBindings.findChildViewById(rootView, id);
      if (noshopsyetMiniTxt == null) {
        break missingId;
      }

      id = R.id.shop_text;
      TextView shopText = ViewBindings.findChildViewById(rootView, id);
      if (shopText == null) {
        break missingId;
      }

      id = R.id.space_top;
      LinearLayout spaceTop = ViewBindings.findChildViewById(rootView, id);
      if (spaceTop == null) {
        break missingId;
      }

      id = R.id.topbar;
      LinearLayout topbar = ViewBindings.findChildViewById(rootView, id);
      if (topbar == null) {
        break missingId;
      }

      return new ShopBinding((CoordinatorLayout) rootView, Coordinator, Fab, RecyclerView, back,
          dividerTopbar, holder, noshopsyet, noshopsyetFullTxt, noshopsyetMiniTxt, shopText,
          spaceTop, topbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
