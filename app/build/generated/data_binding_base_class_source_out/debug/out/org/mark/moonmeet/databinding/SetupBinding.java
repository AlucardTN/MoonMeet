// Generated by view binder compiler. Do not edit!
package org.mark.moonmeet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.mark.moonmeet.R;

public final class SetupBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout allEdittextHolder;

  @NonNull
  public final LinearLayout allHolder;

  @NonNull
  public final CircleImageView avatar;

  @NonNull
  public final LinearLayout avatarHolder;

  @NonNull
  public final LinearLayout bottomLinear;

  @NonNull
  public final TextView btmTxt1;

  @NonNull
  public final TextView btmTxt2;

  @NonNull
  public final LinearLayout dividerFirst;

  @NonNull
  public final LinearLayout dividerLast;

  @NonNull
  public final ImageView done;

  @NonNull
  public final EditText firstnameEdittext;

  @NonNull
  public final LinearLayout firstnameHolder;

  @NonNull
  public final LinearLayout imageHolder;

  @NonNull
  public final ImageView imageview1;

  @NonNull
  public final ImageView imageview2;

  @NonNull
  public final TextView information;

  @NonNull
  public final EditText lastnameEdittext;

  @NonNull
  public final LinearLayout lastnameHolder;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final LinearLayout space;

  @NonNull
  public final LinearLayout topbar;

  @NonNull
  public final TextView topbarTxt;

  @NonNull
  public final LinearLayout widthLinear;

  private SetupBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout allEdittextHolder,
      @NonNull LinearLayout allHolder, @NonNull CircleImageView avatar,
      @NonNull LinearLayout avatarHolder, @NonNull LinearLayout bottomLinear,
      @NonNull TextView btmTxt1, @NonNull TextView btmTxt2, @NonNull LinearLayout dividerFirst,
      @NonNull LinearLayout dividerLast, @NonNull ImageView done,
      @NonNull EditText firstnameEdittext, @NonNull LinearLayout firstnameHolder,
      @NonNull LinearLayout imageHolder, @NonNull ImageView imageview1,
      @NonNull ImageView imageview2, @NonNull TextView information,
      @NonNull EditText lastnameEdittext, @NonNull LinearLayout lastnameHolder,
      @NonNull LinearLayout main, @NonNull LinearLayout space, @NonNull LinearLayout topbar,
      @NonNull TextView topbarTxt, @NonNull LinearLayout widthLinear) {
    this.rootView = rootView;
    this.allEdittextHolder = allEdittextHolder;
    this.allHolder = allHolder;
    this.avatar = avatar;
    this.avatarHolder = avatarHolder;
    this.bottomLinear = bottomLinear;
    this.btmTxt1 = btmTxt1;
    this.btmTxt2 = btmTxt2;
    this.dividerFirst = dividerFirst;
    this.dividerLast = dividerLast;
    this.done = done;
    this.firstnameEdittext = firstnameEdittext;
    this.firstnameHolder = firstnameHolder;
    this.imageHolder = imageHolder;
    this.imageview1 = imageview1;
    this.imageview2 = imageview2;
    this.information = information;
    this.lastnameEdittext = lastnameEdittext;
    this.lastnameHolder = lastnameHolder;
    this.main = main;
    this.space = space;
    this.topbar = topbar;
    this.topbarTxt = topbarTxt;
    this.widthLinear = widthLinear;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SetupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SetupBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.setup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SetupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.all_edittext_holder;
      LinearLayout allEdittextHolder = ViewBindings.findChildViewById(rootView, id);
      if (allEdittextHolder == null) {
        break missingId;
      }

      id = R.id.all_holder;
      LinearLayout allHolder = ViewBindings.findChildViewById(rootView, id);
      if (allHolder == null) {
        break missingId;
      }

      id = R.id.avatar;
      CircleImageView avatar = ViewBindings.findChildViewById(rootView, id);
      if (avatar == null) {
        break missingId;
      }

      id = R.id.avatar_holder;
      LinearLayout avatarHolder = ViewBindings.findChildViewById(rootView, id);
      if (avatarHolder == null) {
        break missingId;
      }

      id = R.id.bottom_linear;
      LinearLayout bottomLinear = ViewBindings.findChildViewById(rootView, id);
      if (bottomLinear == null) {
        break missingId;
      }

      id = R.id.btm_txt1;
      TextView btmTxt1 = ViewBindings.findChildViewById(rootView, id);
      if (btmTxt1 == null) {
        break missingId;
      }

      id = R.id.btm_txt2;
      TextView btmTxt2 = ViewBindings.findChildViewById(rootView, id);
      if (btmTxt2 == null) {
        break missingId;
      }

      id = R.id.divider_first;
      LinearLayout dividerFirst = ViewBindings.findChildViewById(rootView, id);
      if (dividerFirst == null) {
        break missingId;
      }

      id = R.id.divider_last;
      LinearLayout dividerLast = ViewBindings.findChildViewById(rootView, id);
      if (dividerLast == null) {
        break missingId;
      }

      id = R.id.done;
      ImageView done = ViewBindings.findChildViewById(rootView, id);
      if (done == null) {
        break missingId;
      }

      id = R.id.firstname_edittext;
      EditText firstnameEdittext = ViewBindings.findChildViewById(rootView, id);
      if (firstnameEdittext == null) {
        break missingId;
      }

      id = R.id.firstname_holder;
      LinearLayout firstnameHolder = ViewBindings.findChildViewById(rootView, id);
      if (firstnameHolder == null) {
        break missingId;
      }

      id = R.id.image_holder;
      LinearLayout imageHolder = ViewBindings.findChildViewById(rootView, id);
      if (imageHolder == null) {
        break missingId;
      }

      id = R.id.imageview1;
      ImageView imageview1 = ViewBindings.findChildViewById(rootView, id);
      if (imageview1 == null) {
        break missingId;
      }

      id = R.id.imageview2;
      ImageView imageview2 = ViewBindings.findChildViewById(rootView, id);
      if (imageview2 == null) {
        break missingId;
      }

      id = R.id.information;
      TextView information = ViewBindings.findChildViewById(rootView, id);
      if (information == null) {
        break missingId;
      }

      id = R.id.lastname_edittext;
      EditText lastnameEdittext = ViewBindings.findChildViewById(rootView, id);
      if (lastnameEdittext == null) {
        break missingId;
      }

      id = R.id.lastname_holder;
      LinearLayout lastnameHolder = ViewBindings.findChildViewById(rootView, id);
      if (lastnameHolder == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.space;
      LinearLayout space = ViewBindings.findChildViewById(rootView, id);
      if (space == null) {
        break missingId;
      }

      id = R.id.topbar;
      LinearLayout topbar = ViewBindings.findChildViewById(rootView, id);
      if (topbar == null) {
        break missingId;
      }

      id = R.id.topbar_txt;
      TextView topbarTxt = ViewBindings.findChildViewById(rootView, id);
      if (topbarTxt == null) {
        break missingId;
      }

      id = R.id.width_linear;
      LinearLayout widthLinear = ViewBindings.findChildViewById(rootView, id);
      if (widthLinear == null) {
        break missingId;
      }

      return new SetupBinding((LinearLayout) rootView, allEdittextHolder, allHolder, avatar,
          avatarHolder, bottomLinear, btmTxt1, btmTxt2, dividerFirst, dividerLast, done,
          firstnameEdittext, firstnameHolder, imageHolder, imageview1, imageview2, information,
          lastnameEdittext, lastnameHolder, main, space, topbar, topbarTxt, widthLinear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
