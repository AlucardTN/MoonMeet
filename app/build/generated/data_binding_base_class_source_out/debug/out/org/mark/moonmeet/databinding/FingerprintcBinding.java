// Generated by view binder compiler. Do not edit!
package org.mark.moonmeet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.mark.moonmeet.R;

public final class FingerprintcBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout cancelHolder;

  @NonNull
  public final TextView cancelSensor;

  @NonNull
  public final TextView fingername;

  @NonNull
  public final TextView hint;

  @NonNull
  public final LinearLayout holderFpc;

  @NonNull
  public final LinearLayout imageSesnorHolder;

  @NonNull
  public final LinearLayout mainDialogHolder;

  @NonNull
  public final LinearLayout space;

  @NonNull
  public final ImageView touchSensorImage;

  @NonNull
  public final TextView touchSensorText;

  private FingerprintcBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout cancelHolder,
      @NonNull TextView cancelSensor, @NonNull TextView fingername, @NonNull TextView hint,
      @NonNull LinearLayout holderFpc, @NonNull LinearLayout imageSesnorHolder,
      @NonNull LinearLayout mainDialogHolder, @NonNull LinearLayout space,
      @NonNull ImageView touchSensorImage, @NonNull TextView touchSensorText) {
    this.rootView = rootView;
    this.cancelHolder = cancelHolder;
    this.cancelSensor = cancelSensor;
    this.fingername = fingername;
    this.hint = hint;
    this.holderFpc = holderFpc;
    this.imageSesnorHolder = imageSesnorHolder;
    this.mainDialogHolder = mainDialogHolder;
    this.space = space;
    this.touchSensorImage = touchSensorImage;
    this.touchSensorText = touchSensorText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FingerprintcBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FingerprintcBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fingerprintc, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FingerprintcBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_holder;
      LinearLayout cancelHolder = ViewBindings.findChildViewById(rootView, id);
      if (cancelHolder == null) {
        break missingId;
      }

      id = R.id.cancel_sensor;
      TextView cancelSensor = ViewBindings.findChildViewById(rootView, id);
      if (cancelSensor == null) {
        break missingId;
      }

      id = R.id.fingername;
      TextView fingername = ViewBindings.findChildViewById(rootView, id);
      if (fingername == null) {
        break missingId;
      }

      id = R.id.hint;
      TextView hint = ViewBindings.findChildViewById(rootView, id);
      if (hint == null) {
        break missingId;
      }

      id = R.id.holder_fpc;
      LinearLayout holderFpc = ViewBindings.findChildViewById(rootView, id);
      if (holderFpc == null) {
        break missingId;
      }

      id = R.id.image_sesnor_holder;
      LinearLayout imageSesnorHolder = ViewBindings.findChildViewById(rootView, id);
      if (imageSesnorHolder == null) {
        break missingId;
      }

      id = R.id.main_dialog_holder;
      LinearLayout mainDialogHolder = ViewBindings.findChildViewById(rootView, id);
      if (mainDialogHolder == null) {
        break missingId;
      }

      id = R.id.space;
      LinearLayout space = ViewBindings.findChildViewById(rootView, id);
      if (space == null) {
        break missingId;
      }

      id = R.id.touch_sensor_image;
      ImageView touchSensorImage = ViewBindings.findChildViewById(rootView, id);
      if (touchSensorImage == null) {
        break missingId;
      }

      id = R.id.touch_sensor_text;
      TextView touchSensorText = ViewBindings.findChildViewById(rootView, id);
      if (touchSensorText == null) {
        break missingId;
      }

      return new FingerprintcBinding((LinearLayout) rootView, cancelHolder, cancelSensor,
          fingername, hint, holderFpc, imageSesnorHolder, mainDialogHolder, space, touchSensorImage,
          touchSensorText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
