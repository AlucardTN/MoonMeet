// Generated by view binder compiler. Do not edit!
package org.mark.moonmeet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.mark.moonmeet.R;

public final class ChangeusernameBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView apply;

  @NonNull
  public final ImageView back;

  @NonNull
  public final TextView checkUserTxt;

  @NonNull
  public final TextView contactTxt;

  @NonNull
  public final LinearLayout divider;

  @NonNull
  public final LinearLayout editextHolder;

  @NonNull
  public final TextView linkTitle;

  @NonNull
  public final TextView linkTxt;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final LinearLayout space1;

  @NonNull
  public final LinearLayout space2;

  @NonNull
  public final LinearLayout space3;

  @NonNull
  public final LinearLayout space4;

  @NonNull
  public final LinearLayout topbar;

  @NonNull
  public final LinearLayout topbarSpace;

  @NonNull
  public final TextView topbarTxt;

  @NonNull
  public final EditText usernameEdittext;

  @NonNull
  public final TextView youcanuseTxt;

  private ChangeusernameBinding(@NonNull LinearLayout rootView, @NonNull ImageView apply,
      @NonNull ImageView back, @NonNull TextView checkUserTxt, @NonNull TextView contactTxt,
      @NonNull LinearLayout divider, @NonNull LinearLayout editextHolder,
      @NonNull TextView linkTitle, @NonNull TextView linkTxt, @NonNull LinearLayout main,
      @NonNull LinearLayout space1, @NonNull LinearLayout space2, @NonNull LinearLayout space3,
      @NonNull LinearLayout space4, @NonNull LinearLayout topbar, @NonNull LinearLayout topbarSpace,
      @NonNull TextView topbarTxt, @NonNull EditText usernameEdittext,
      @NonNull TextView youcanuseTxt) {
    this.rootView = rootView;
    this.apply = apply;
    this.back = back;
    this.checkUserTxt = checkUserTxt;
    this.contactTxt = contactTxt;
    this.divider = divider;
    this.editextHolder = editextHolder;
    this.linkTitle = linkTitle;
    this.linkTxt = linkTxt;
    this.main = main;
    this.space1 = space1;
    this.space2 = space2;
    this.space3 = space3;
    this.space4 = space4;
    this.topbar = topbar;
    this.topbarSpace = topbarSpace;
    this.topbarTxt = topbarTxt;
    this.usernameEdittext = usernameEdittext;
    this.youcanuseTxt = youcanuseTxt;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChangeusernameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChangeusernameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.changeusername, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChangeusernameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.apply;
      ImageView apply = ViewBindings.findChildViewById(rootView, id);
      if (apply == null) {
        break missingId;
      }

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.check_user_txt;
      TextView checkUserTxt = ViewBindings.findChildViewById(rootView, id);
      if (checkUserTxt == null) {
        break missingId;
      }

      id = R.id.contact_txt;
      TextView contactTxt = ViewBindings.findChildViewById(rootView, id);
      if (contactTxt == null) {
        break missingId;
      }

      id = R.id.divider;
      LinearLayout divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.editext_holder;
      LinearLayout editextHolder = ViewBindings.findChildViewById(rootView, id);
      if (editextHolder == null) {
        break missingId;
      }

      id = R.id.link_title;
      TextView linkTitle = ViewBindings.findChildViewById(rootView, id);
      if (linkTitle == null) {
        break missingId;
      }

      id = R.id.link_txt;
      TextView linkTxt = ViewBindings.findChildViewById(rootView, id);
      if (linkTxt == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.space1;
      LinearLayout space1 = ViewBindings.findChildViewById(rootView, id);
      if (space1 == null) {
        break missingId;
      }

      id = R.id.space2;
      LinearLayout space2 = ViewBindings.findChildViewById(rootView, id);
      if (space2 == null) {
        break missingId;
      }

      id = R.id.space3;
      LinearLayout space3 = ViewBindings.findChildViewById(rootView, id);
      if (space3 == null) {
        break missingId;
      }

      id = R.id.space4;
      LinearLayout space4 = ViewBindings.findChildViewById(rootView, id);
      if (space4 == null) {
        break missingId;
      }

      id = R.id.topbar;
      LinearLayout topbar = ViewBindings.findChildViewById(rootView, id);
      if (topbar == null) {
        break missingId;
      }

      id = R.id.topbar_space;
      LinearLayout topbarSpace = ViewBindings.findChildViewById(rootView, id);
      if (topbarSpace == null) {
        break missingId;
      }

      id = R.id.topbar_txt;
      TextView topbarTxt = ViewBindings.findChildViewById(rootView, id);
      if (topbarTxt == null) {
        break missingId;
      }

      id = R.id.username_edittext;
      EditText usernameEdittext = ViewBindings.findChildViewById(rootView, id);
      if (usernameEdittext == null) {
        break missingId;
      }

      id = R.id.youcanuse_txt;
      TextView youcanuseTxt = ViewBindings.findChildViewById(rootView, id);
      if (youcanuseTxt == null) {
        break missingId;
      }

      return new ChangeusernameBinding((LinearLayout) rootView, apply, back, checkUserTxt,
          contactTxt, divider, editextHolder, linkTitle, linkTxt, main, space1, space2, space3,
          space4, topbar, topbarSpace, topbarTxt, usernameEdittext, youcanuseTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
