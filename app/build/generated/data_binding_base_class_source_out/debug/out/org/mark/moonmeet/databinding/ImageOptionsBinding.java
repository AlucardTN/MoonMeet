// Generated by view binder compiler. Do not edit!
package org.mark.moonmeet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.mark.moonmeet.R;

public final class ImageOptionsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout allHolder;

  @NonNull
  public final LinearLayout bg;

  @NonNull
  public final TextView chooseTxt;

  @NonNull
  public final ImageView removeImg;

  @NonNull
  public final LinearLayout removeLinear;

  @NonNull
  public final TextView removeTxt;

  @NonNull
  public final ImageView takeImg;

  @NonNull
  public final LinearLayout takeLinear;

  @NonNull
  public final TextView takeTxt;

  @NonNull
  public final ImageView uploadImg;

  @NonNull
  public final LinearLayout uploadLinear;

  @NonNull
  public final TextView uploadTxt;

  private ImageOptionsBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout allHolder,
      @NonNull LinearLayout bg, @NonNull TextView chooseTxt, @NonNull ImageView removeImg,
      @NonNull LinearLayout removeLinear, @NonNull TextView removeTxt, @NonNull ImageView takeImg,
      @NonNull LinearLayout takeLinear, @NonNull TextView takeTxt, @NonNull ImageView uploadImg,
      @NonNull LinearLayout uploadLinear, @NonNull TextView uploadTxt) {
    this.rootView = rootView;
    this.allHolder = allHolder;
    this.bg = bg;
    this.chooseTxt = chooseTxt;
    this.removeImg = removeImg;
    this.removeLinear = removeLinear;
    this.removeTxt = removeTxt;
    this.takeImg = takeImg;
    this.takeLinear = takeLinear;
    this.takeTxt = takeTxt;
    this.uploadImg = uploadImg;
    this.uploadLinear = uploadLinear;
    this.uploadTxt = uploadTxt;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ImageOptionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ImageOptionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.image_options, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ImageOptionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.all_holder;
      LinearLayout allHolder = ViewBindings.findChildViewById(rootView, id);
      if (allHolder == null) {
        break missingId;
      }

      id = R.id.bg;
      LinearLayout bg = ViewBindings.findChildViewById(rootView, id);
      if (bg == null) {
        break missingId;
      }

      id = R.id.choose_txt;
      TextView chooseTxt = ViewBindings.findChildViewById(rootView, id);
      if (chooseTxt == null) {
        break missingId;
      }

      id = R.id.remove_img;
      ImageView removeImg = ViewBindings.findChildViewById(rootView, id);
      if (removeImg == null) {
        break missingId;
      }

      id = R.id.remove_linear;
      LinearLayout removeLinear = ViewBindings.findChildViewById(rootView, id);
      if (removeLinear == null) {
        break missingId;
      }

      id = R.id.remove_txt;
      TextView removeTxt = ViewBindings.findChildViewById(rootView, id);
      if (removeTxt == null) {
        break missingId;
      }

      id = R.id.take_img;
      ImageView takeImg = ViewBindings.findChildViewById(rootView, id);
      if (takeImg == null) {
        break missingId;
      }

      id = R.id.take_linear;
      LinearLayout takeLinear = ViewBindings.findChildViewById(rootView, id);
      if (takeLinear == null) {
        break missingId;
      }

      id = R.id.take_txt;
      TextView takeTxt = ViewBindings.findChildViewById(rootView, id);
      if (takeTxt == null) {
        break missingId;
      }

      id = R.id.upload_img;
      ImageView uploadImg = ViewBindings.findChildViewById(rootView, id);
      if (uploadImg == null) {
        break missingId;
      }

      id = R.id.upload_linear;
      LinearLayout uploadLinear = ViewBindings.findChildViewById(rootView, id);
      if (uploadLinear == null) {
        break missingId;
      }

      id = R.id.upload_txt;
      TextView uploadTxt = ViewBindings.findChildViewById(rootView, id);
      if (uploadTxt == null) {
        break missingId;
      }

      return new ImageOptionsBinding((LinearLayout) rootView, allHolder, bg, chooseTxt, removeImg,
          removeLinear, removeTxt, takeImg, takeLinear, takeTxt, uploadImg, uploadLinear,
          uploadTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
