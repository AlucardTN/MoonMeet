// Generated by view binder compiler. Do not edit!
package org.mark.moonmeet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.mark.moonmeet.R;

public final class VerificationDialogFragmentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout bg;

  @NonNull
  public final LinearLayout card;

  @NonNull
  public final CardView cardview;

  @NonNull
  public final TextView continueTxt;

  @NonNull
  public final LinearLayout lastLinear;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final LinearLayout middleLinear;

  @NonNull
  public final TextView moonmeet;

  @NonNull
  public final TextView proccesTxt;

  @NonNull
  public final LinearLayout space;

  @NonNull
  public final LinearLayout spaceBetween;

  @NonNull
  public final TextView stopTxt;

  @NonNull
  public final LinearLayout topLinear;

  private VerificationDialogFragmentBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout bg, @NonNull LinearLayout card, @NonNull CardView cardview,
      @NonNull TextView continueTxt, @NonNull LinearLayout lastLinear, @NonNull LinearLayout main,
      @NonNull LinearLayout middleLinear, @NonNull TextView moonmeet, @NonNull TextView proccesTxt,
      @NonNull LinearLayout space, @NonNull LinearLayout spaceBetween, @NonNull TextView stopTxt,
      @NonNull LinearLayout topLinear) {
    this.rootView = rootView;
    this.bg = bg;
    this.card = card;
    this.cardview = cardview;
    this.continueTxt = continueTxt;
    this.lastLinear = lastLinear;
    this.main = main;
    this.middleLinear = middleLinear;
    this.moonmeet = moonmeet;
    this.proccesTxt = proccesTxt;
    this.space = space;
    this.spaceBetween = spaceBetween;
    this.stopTxt = stopTxt;
    this.topLinear = topLinear;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VerificationDialogFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VerificationDialogFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.verification_dialog_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VerificationDialogFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bg;
      LinearLayout bg = ViewBindings.findChildViewById(rootView, id);
      if (bg == null) {
        break missingId;
      }

      id = R.id.card;
      LinearLayout card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.cardview;
      CardView cardview = ViewBindings.findChildViewById(rootView, id);
      if (cardview == null) {
        break missingId;
      }

      id = R.id.continue_txt;
      TextView continueTxt = ViewBindings.findChildViewById(rootView, id);
      if (continueTxt == null) {
        break missingId;
      }

      id = R.id.last_linear;
      LinearLayout lastLinear = ViewBindings.findChildViewById(rootView, id);
      if (lastLinear == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.middle_linear;
      LinearLayout middleLinear = ViewBindings.findChildViewById(rootView, id);
      if (middleLinear == null) {
        break missingId;
      }

      id = R.id.moonmeet;
      TextView moonmeet = ViewBindings.findChildViewById(rootView, id);
      if (moonmeet == null) {
        break missingId;
      }

      id = R.id.procces_txt;
      TextView proccesTxt = ViewBindings.findChildViewById(rootView, id);
      if (proccesTxt == null) {
        break missingId;
      }

      id = R.id.space;
      LinearLayout space = ViewBindings.findChildViewById(rootView, id);
      if (space == null) {
        break missingId;
      }

      id = R.id.space_between;
      LinearLayout spaceBetween = ViewBindings.findChildViewById(rootView, id);
      if (spaceBetween == null) {
        break missingId;
      }

      id = R.id.stop_txt;
      TextView stopTxt = ViewBindings.findChildViewById(rootView, id);
      if (stopTxt == null) {
        break missingId;
      }

      id = R.id.top_linear;
      LinearLayout topLinear = ViewBindings.findChildViewById(rootView, id);
      if (topLinear == null) {
        break missingId;
      }

      return new VerificationDialogFragmentBinding((LinearLayout) rootView, bg, card, cardview,
          continueTxt, lastLinear, main, middleLinear, moonmeet, proccesTxt, space, spaceBetween,
          stopTxt, topLinear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
