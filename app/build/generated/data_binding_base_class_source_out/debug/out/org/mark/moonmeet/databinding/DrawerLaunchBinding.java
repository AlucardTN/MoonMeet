// Generated by view binder compiler. Do not edit!
package org.mark.moonmeet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.mark.moonmeet.R;

public final class DrawerLaunchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout announcementHolder;

  @NonNull
  public final ImageView announcementIcon;

  @NonNull
  public final TextView announcementTxt;

  @NonNull
  public final CircleImageView avatar;

  @NonNull
  public final LinearLayout avatarHolder;

  @NonNull
  public final ImageView contactIcon;

  @NonNull
  public final TextView contactTxt;

  @NonNull
  public final LinearLayout contactsHolder;

  @NonNull
  public final LinearLayout divider1;

  @NonNull
  public final LinearLayout divider2;

  @NonNull
  public final LinearLayout faqHolder;

  @NonNull
  public final ImageView faqIcon;

  @NonNull
  public final TextView faqTxt;

  @NonNull
  public final ImageView groupIcon;

  @NonNull
  public final LinearLayout inviteFriendsHolder;

  @NonNull
  public final ImageView inviteIcon;

  @NonNull
  public final TextView inviteTxt;

  @NonNull
  public final LinearLayout ka7laHolder;

  @NonNull
  public final ImageView ka7laIcon;

  @NonNull
  public final TextView ka7laTxt;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final TextView name;

  @NonNull
  public final LinearLayout namePhoneHolder;

  @NonNull
  public final LinearLayout newGroupHolder;

  @NonNull
  public final TextView newGroupTxt;

  @NonNull
  public final LinearLayout part1;

  @NonNull
  public final LinearLayout part2;

  @NonNull
  public final TextView phone;

  @NonNull
  public final ImageView savedIcon;

  @NonNull
  public final LinearLayout savedMessageHolder;

  @NonNull
  public final TextView savedTxt;

  @NonNull
  public final LinearLayout settingsHolder;

  @NonNull
  public final ImageView settingsIcon;

  @NonNull
  public final TextView settingsTxt;

  @NonNull
  public final ImageView themeSwitcher;

  @NonNull
  public final LinearLayout topHolder;

  private DrawerLaunchBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout announcementHolder, @NonNull ImageView announcementIcon,
      @NonNull TextView announcementTxt, @NonNull CircleImageView avatar,
      @NonNull LinearLayout avatarHolder, @NonNull ImageView contactIcon,
      @NonNull TextView contactTxt, @NonNull LinearLayout contactsHolder,
      @NonNull LinearLayout divider1, @NonNull LinearLayout divider2,
      @NonNull LinearLayout faqHolder, @NonNull ImageView faqIcon, @NonNull TextView faqTxt,
      @NonNull ImageView groupIcon, @NonNull LinearLayout inviteFriendsHolder,
      @NonNull ImageView inviteIcon, @NonNull TextView inviteTxt, @NonNull LinearLayout ka7laHolder,
      @NonNull ImageView ka7laIcon, @NonNull TextView ka7laTxt, @NonNull LinearLayout main,
      @NonNull TextView name, @NonNull LinearLayout namePhoneHolder,
      @NonNull LinearLayout newGroupHolder, @NonNull TextView newGroupTxt,
      @NonNull LinearLayout part1, @NonNull LinearLayout part2, @NonNull TextView phone,
      @NonNull ImageView savedIcon, @NonNull LinearLayout savedMessageHolder,
      @NonNull TextView savedTxt, @NonNull LinearLayout settingsHolder,
      @NonNull ImageView settingsIcon, @NonNull TextView settingsTxt,
      @NonNull ImageView themeSwitcher, @NonNull LinearLayout topHolder) {
    this.rootView = rootView;
    this.announcementHolder = announcementHolder;
    this.announcementIcon = announcementIcon;
    this.announcementTxt = announcementTxt;
    this.avatar = avatar;
    this.avatarHolder = avatarHolder;
    this.contactIcon = contactIcon;
    this.contactTxt = contactTxt;
    this.contactsHolder = contactsHolder;
    this.divider1 = divider1;
    this.divider2 = divider2;
    this.faqHolder = faqHolder;
    this.faqIcon = faqIcon;
    this.faqTxt = faqTxt;
    this.groupIcon = groupIcon;
    this.inviteFriendsHolder = inviteFriendsHolder;
    this.inviteIcon = inviteIcon;
    this.inviteTxt = inviteTxt;
    this.ka7laHolder = ka7laHolder;
    this.ka7laIcon = ka7laIcon;
    this.ka7laTxt = ka7laTxt;
    this.main = main;
    this.name = name;
    this.namePhoneHolder = namePhoneHolder;
    this.newGroupHolder = newGroupHolder;
    this.newGroupTxt = newGroupTxt;
    this.part1 = part1;
    this.part2 = part2;
    this.phone = phone;
    this.savedIcon = savedIcon;
    this.savedMessageHolder = savedMessageHolder;
    this.savedTxt = savedTxt;
    this.settingsHolder = settingsHolder;
    this.settingsIcon = settingsIcon;
    this.settingsTxt = settingsTxt;
    this.themeSwitcher = themeSwitcher;
    this.topHolder = topHolder;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DrawerLaunchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DrawerLaunchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout._drawer_launch, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DrawerLaunchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.announcement_holder;
      LinearLayout announcementHolder = ViewBindings.findChildViewById(rootView, id);
      if (announcementHolder == null) {
        break missingId;
      }

      id = R.id.announcement_icon;
      ImageView announcementIcon = ViewBindings.findChildViewById(rootView, id);
      if (announcementIcon == null) {
        break missingId;
      }

      id = R.id.announcement_txt;
      TextView announcementTxt = ViewBindings.findChildViewById(rootView, id);
      if (announcementTxt == null) {
        break missingId;
      }

      id = R.id.avatar;
      CircleImageView avatar = ViewBindings.findChildViewById(rootView, id);
      if (avatar == null) {
        break missingId;
      }

      id = R.id.avatar_holder;
      LinearLayout avatarHolder = ViewBindings.findChildViewById(rootView, id);
      if (avatarHolder == null) {
        break missingId;
      }

      id = R.id.contact_icon;
      ImageView contactIcon = ViewBindings.findChildViewById(rootView, id);
      if (contactIcon == null) {
        break missingId;
      }

      id = R.id.contact_txt;
      TextView contactTxt = ViewBindings.findChildViewById(rootView, id);
      if (contactTxt == null) {
        break missingId;
      }

      id = R.id.contacts_holder;
      LinearLayout contactsHolder = ViewBindings.findChildViewById(rootView, id);
      if (contactsHolder == null) {
        break missingId;
      }

      id = R.id.divider1;
      LinearLayout divider1 = ViewBindings.findChildViewById(rootView, id);
      if (divider1 == null) {
        break missingId;
      }

      id = R.id.divider2;
      LinearLayout divider2 = ViewBindings.findChildViewById(rootView, id);
      if (divider2 == null) {
        break missingId;
      }

      id = R.id.faq_holder;
      LinearLayout faqHolder = ViewBindings.findChildViewById(rootView, id);
      if (faqHolder == null) {
        break missingId;
      }

      id = R.id.faq_icon;
      ImageView faqIcon = ViewBindings.findChildViewById(rootView, id);
      if (faqIcon == null) {
        break missingId;
      }

      id = R.id.faq_txt;
      TextView faqTxt = ViewBindings.findChildViewById(rootView, id);
      if (faqTxt == null) {
        break missingId;
      }

      id = R.id.group_icon;
      ImageView groupIcon = ViewBindings.findChildViewById(rootView, id);
      if (groupIcon == null) {
        break missingId;
      }

      id = R.id.invite_friends_holder;
      LinearLayout inviteFriendsHolder = ViewBindings.findChildViewById(rootView, id);
      if (inviteFriendsHolder == null) {
        break missingId;
      }

      id = R.id.invite_icon;
      ImageView inviteIcon = ViewBindings.findChildViewById(rootView, id);
      if (inviteIcon == null) {
        break missingId;
      }

      id = R.id.invite_txt;
      TextView inviteTxt = ViewBindings.findChildViewById(rootView, id);
      if (inviteTxt == null) {
        break missingId;
      }

      id = R.id.ka7la_holder;
      LinearLayout ka7laHolder = ViewBindings.findChildViewById(rootView, id);
      if (ka7laHolder == null) {
        break missingId;
      }

      id = R.id.ka7la_icon;
      ImageView ka7laIcon = ViewBindings.findChildViewById(rootView, id);
      if (ka7laIcon == null) {
        break missingId;
      }

      id = R.id.ka7la_txt;
      TextView ka7laTxt = ViewBindings.findChildViewById(rootView, id);
      if (ka7laTxt == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.name_phone_holder;
      LinearLayout namePhoneHolder = ViewBindings.findChildViewById(rootView, id);
      if (namePhoneHolder == null) {
        break missingId;
      }

      id = R.id.new_group_holder;
      LinearLayout newGroupHolder = ViewBindings.findChildViewById(rootView, id);
      if (newGroupHolder == null) {
        break missingId;
      }

      id = R.id.new_group_txt;
      TextView newGroupTxt = ViewBindings.findChildViewById(rootView, id);
      if (newGroupTxt == null) {
        break missingId;
      }

      id = R.id.part_1;
      LinearLayout part1 = ViewBindings.findChildViewById(rootView, id);
      if (part1 == null) {
        break missingId;
      }

      id = R.id.part2;
      LinearLayout part2 = ViewBindings.findChildViewById(rootView, id);
      if (part2 == null) {
        break missingId;
      }

      id = R.id.phone;
      TextView phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.saved_icon;
      ImageView savedIcon = ViewBindings.findChildViewById(rootView, id);
      if (savedIcon == null) {
        break missingId;
      }

      id = R.id.saved_message_holder;
      LinearLayout savedMessageHolder = ViewBindings.findChildViewById(rootView, id);
      if (savedMessageHolder == null) {
        break missingId;
      }

      id = R.id.saved_txt;
      TextView savedTxt = ViewBindings.findChildViewById(rootView, id);
      if (savedTxt == null) {
        break missingId;
      }

      id = R.id.settings_holder;
      LinearLayout settingsHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsHolder == null) {
        break missingId;
      }

      id = R.id.settings_icon;
      ImageView settingsIcon = ViewBindings.findChildViewById(rootView, id);
      if (settingsIcon == null) {
        break missingId;
      }

      id = R.id.settings_txt;
      TextView settingsTxt = ViewBindings.findChildViewById(rootView, id);
      if (settingsTxt == null) {
        break missingId;
      }

      id = R.id.theme_switcher;
      ImageView themeSwitcher = ViewBindings.findChildViewById(rootView, id);
      if (themeSwitcher == null) {
        break missingId;
      }

      id = R.id.top_holder;
      LinearLayout topHolder = ViewBindings.findChildViewById(rootView, id);
      if (topHolder == null) {
        break missingId;
      }

      return new DrawerLaunchBinding((LinearLayout) rootView, announcementHolder, announcementIcon,
          announcementTxt, avatar, avatarHolder, contactIcon, contactTxt, contactsHolder, divider1,
          divider2, faqHolder, faqIcon, faqTxt, groupIcon, inviteFriendsHolder, inviteIcon,
          inviteTxt, ka7laHolder, ka7laIcon, ka7laTxt, main, name, namePhoneHolder, newGroupHolder,
          newGroupTxt, part1, part2, phone, savedIcon, savedMessageHolder, savedTxt, settingsHolder,
          settingsIcon, settingsTxt, themeSwitcher, topHolder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
