// Generated by view binder compiler. Do not edit!
package org.mark.moonmeet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.mark.moonmeet.R;

public final class ChangebioBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView back;

  @NonNull
  public final LinearLayout base;

  @NonNull
  public final EditText bioEdittext;

  @NonNull
  public final LinearLayout childHolder;

  @NonNull
  public final LinearLayout divider;

  @NonNull
  public final ImageView done;

  @NonNull
  public final LinearLayout holdetBase;

  @NonNull
  public final TextView length;

  @NonNull
  public final LinearLayout linear2;

  @NonNull
  public final LinearLayout space;

  @NonNull
  public final LinearLayout space1;

  @NonNull
  public final TextView textview1;

  @NonNull
  public final LinearLayout topbar;

  @NonNull
  public final TextView topbarTxt;

  private ChangebioBinding(@NonNull LinearLayout rootView, @NonNull ImageView back,
      @NonNull LinearLayout base, @NonNull EditText bioEdittext, @NonNull LinearLayout childHolder,
      @NonNull LinearLayout divider, @NonNull ImageView done, @NonNull LinearLayout holdetBase,
      @NonNull TextView length, @NonNull LinearLayout linear2, @NonNull LinearLayout space,
      @NonNull LinearLayout space1, @NonNull TextView textview1, @NonNull LinearLayout topbar,
      @NonNull TextView topbarTxt) {
    this.rootView = rootView;
    this.back = back;
    this.base = base;
    this.bioEdittext = bioEdittext;
    this.childHolder = childHolder;
    this.divider = divider;
    this.done = done;
    this.holdetBase = holdetBase;
    this.length = length;
    this.linear2 = linear2;
    this.space = space;
    this.space1 = space1;
    this.textview1 = textview1;
    this.topbar = topbar;
    this.topbarTxt = topbarTxt;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChangebioBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChangebioBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.changebio, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChangebioBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.base;
      LinearLayout base = ViewBindings.findChildViewById(rootView, id);
      if (base == null) {
        break missingId;
      }

      id = R.id.bio_edittext;
      EditText bioEdittext = ViewBindings.findChildViewById(rootView, id);
      if (bioEdittext == null) {
        break missingId;
      }

      id = R.id.child_holder;
      LinearLayout childHolder = ViewBindings.findChildViewById(rootView, id);
      if (childHolder == null) {
        break missingId;
      }

      id = R.id.divider;
      LinearLayout divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.done;
      ImageView done = ViewBindings.findChildViewById(rootView, id);
      if (done == null) {
        break missingId;
      }

      id = R.id.holdet_base;
      LinearLayout holdetBase = ViewBindings.findChildViewById(rootView, id);
      if (holdetBase == null) {
        break missingId;
      }

      id = R.id.length;
      TextView length = ViewBindings.findChildViewById(rootView, id);
      if (length == null) {
        break missingId;
      }

      id = R.id.linear2;
      LinearLayout linear2 = ViewBindings.findChildViewById(rootView, id);
      if (linear2 == null) {
        break missingId;
      }

      id = R.id.space;
      LinearLayout space = ViewBindings.findChildViewById(rootView, id);
      if (space == null) {
        break missingId;
      }

      id = R.id.space_1;
      LinearLayout space1 = ViewBindings.findChildViewById(rootView, id);
      if (space1 == null) {
        break missingId;
      }

      id = R.id.textview1;
      TextView textview1 = ViewBindings.findChildViewById(rootView, id);
      if (textview1 == null) {
        break missingId;
      }

      id = R.id.topbar;
      LinearLayout topbar = ViewBindings.findChildViewById(rootView, id);
      if (topbar == null) {
        break missingId;
      }

      id = R.id.topbar_txt;
      TextView topbarTxt = ViewBindings.findChildViewById(rootView, id);
      if (topbarTxt == null) {
        break missingId;
      }

      return new ChangebioBinding((LinearLayout) rootView, back, base, bioEdittext, childHolder,
          divider, done, holdetBase, length, linear2, space, space1, textview1, topbar, topbarTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
