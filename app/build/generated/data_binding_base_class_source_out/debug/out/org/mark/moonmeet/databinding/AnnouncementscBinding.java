// Generated by view binder compiler. Do not edit!
package org.mark.moonmeet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.mark.moonmeet.R;

public final class AnnouncementscBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout BackGround;

  @NonNull
  public final CardView CardView;

  @NonNull
  public final LinearLayout LinearInsideCard;

  @NonNull
  public final CircleImageView circleimageview1;

  @NonNull
  public final TextView forMoreInfo;

  @NonNull
  public final ImageView image;

  @NonNull
  public final LinearLayout linear24;

  @NonNull
  public final LinearLayout linear27;

  @NonNull
  public final LinearLayout linear28;

  @NonNull
  public final LinearLayout linear29;

  @NonNull
  public final LinearLayout linear6;

  @NonNull
  public final LinearLayout linear8;

  @NonNull
  public final TextView link;

  @NonNull
  public final LinearLayout nothing;

  @NonNull
  public final LinearLayout propicBg;

  @NonNull
  public final TextView textview1;

  @NonNull
  public final TextView textview9;

  @NonNull
  public final TextView time;

  private AnnouncementscBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout BackGround,
      @NonNull CardView CardView, @NonNull LinearLayout LinearInsideCard,
      @NonNull CircleImageView circleimageview1, @NonNull TextView forMoreInfo,
      @NonNull ImageView image, @NonNull LinearLayout linear24, @NonNull LinearLayout linear27,
      @NonNull LinearLayout linear28, @NonNull LinearLayout linear29, @NonNull LinearLayout linear6,
      @NonNull LinearLayout linear8, @NonNull TextView link, @NonNull LinearLayout nothing,
      @NonNull LinearLayout propicBg, @NonNull TextView textview1, @NonNull TextView textview9,
      @NonNull TextView time) {
    this.rootView = rootView;
    this.BackGround = BackGround;
    this.CardView = CardView;
    this.LinearInsideCard = LinearInsideCard;
    this.circleimageview1 = circleimageview1;
    this.forMoreInfo = forMoreInfo;
    this.image = image;
    this.linear24 = linear24;
    this.linear27 = linear27;
    this.linear28 = linear28;
    this.linear29 = linear29;
    this.linear6 = linear6;
    this.linear8 = linear8;
    this.link = link;
    this.nothing = nothing;
    this.propicBg = propicBg;
    this.textview1 = textview1;
    this.textview9 = textview9;
    this.time = time;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AnnouncementscBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AnnouncementscBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.announcementsc, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AnnouncementscBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BackGround;
      LinearLayout BackGround = ViewBindings.findChildViewById(rootView, id);
      if (BackGround == null) {
        break missingId;
      }

      id = R.id.CardView;
      CardView CardView = ViewBindings.findChildViewById(rootView, id);
      if (CardView == null) {
        break missingId;
      }

      id = R.id.LinearInsideCard;
      LinearLayout LinearInsideCard = ViewBindings.findChildViewById(rootView, id);
      if (LinearInsideCard == null) {
        break missingId;
      }

      id = R.id.circleimageview1;
      CircleImageView circleimageview1 = ViewBindings.findChildViewById(rootView, id);
      if (circleimageview1 == null) {
        break missingId;
      }

      id = R.id.forMoreInfo;
      TextView forMoreInfo = ViewBindings.findChildViewById(rootView, id);
      if (forMoreInfo == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.linear24;
      LinearLayout linear24 = ViewBindings.findChildViewById(rootView, id);
      if (linear24 == null) {
        break missingId;
      }

      id = R.id.linear27;
      LinearLayout linear27 = ViewBindings.findChildViewById(rootView, id);
      if (linear27 == null) {
        break missingId;
      }

      id = R.id.linear28;
      LinearLayout linear28 = ViewBindings.findChildViewById(rootView, id);
      if (linear28 == null) {
        break missingId;
      }

      id = R.id.linear29;
      LinearLayout linear29 = ViewBindings.findChildViewById(rootView, id);
      if (linear29 == null) {
        break missingId;
      }

      id = R.id.linear6;
      LinearLayout linear6 = ViewBindings.findChildViewById(rootView, id);
      if (linear6 == null) {
        break missingId;
      }

      id = R.id.linear8;
      LinearLayout linear8 = ViewBindings.findChildViewById(rootView, id);
      if (linear8 == null) {
        break missingId;
      }

      id = R.id.link;
      TextView link = ViewBindings.findChildViewById(rootView, id);
      if (link == null) {
        break missingId;
      }

      id = R.id.nothing;
      LinearLayout nothing = ViewBindings.findChildViewById(rootView, id);
      if (nothing == null) {
        break missingId;
      }

      id = R.id.propic_bg;
      LinearLayout propicBg = ViewBindings.findChildViewById(rootView, id);
      if (propicBg == null) {
        break missingId;
      }

      id = R.id.textview1;
      TextView textview1 = ViewBindings.findChildViewById(rootView, id);
      if (textview1 == null) {
        break missingId;
      }

      id = R.id.textview9;
      TextView textview9 = ViewBindings.findChildViewById(rootView, id);
      if (textview9 == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      return new AnnouncementscBinding((LinearLayout) rootView, BackGround, CardView,
          LinearInsideCard, circleimageview1, forMoreInfo, image, linear24, linear27, linear28,
          linear29, linear6, linear8, link, nothing, propicBg, textview1, textview9, time);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
